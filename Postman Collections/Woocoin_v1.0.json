{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Woocoin v1.0",
    "description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?"
  },
  "host": "DefaultParameterValue:DefaultParameterValue",
  "basePath": "/v1/woocoin",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "list users",
        "tags": [
          "users"
        ],
        "operationId": "UsersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "chrichen"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "list users",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Crete user for woocoin user.",
        "summary": "create user ADMIN",
        "tags": [
          "users"
        ],
        "operationId": "UsersPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUserAdminrequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Create201"
            },
            "examples": {
              "application/json": {
                "id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen",
                "dateCreated": "1995-09-07T10:40:52Z",
                "dateUpdated": "1995-09-07T10:40:52Z"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}7d505613-9b42-4c74-b42f-e3b1202f70b4"
              },
              "body": "{\"firstName\":\"Christopher\",\"lastName\":\"Chen\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "{\"id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\",\"dateCreated\":\"1995-09-07T10:40:52Z\",\"dateUpdated\":\"1995-09-07T10:40:52Z\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create user ADMIN",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/chrichen": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get wallet",
        "tags": [
          "wallets"
        ],
        "operationId": "UsersChrichenGet2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/users/chrichen",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get wallet",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Crete user for woocoin user.",
        "summary": "create (upsert) wallet",
        "tags": [
          "wallets"
        ],
        "operationId": "UsersChrichenPut2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200"
            },
            "examples": {
              "application/json": {
                "_id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/users/chrichen",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Access-Control-Allow-Headers": "Content-Type, Authorization, Account-Number",
                "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE",
                "Access-Control-Allow-Origin": "*",
                "Connection": "keep-alive",
                "Content-Length": "211",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Fri, 06 Jul 2018 17:42:10 GMT",
                "ETag": "W/\"d3-KF36NKndDnPhGoh6gRCpvicHkGA\""
              },
              "body": "{\"_id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create (upsert) wallet",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/chrichen/activate": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "upsert airdrop ADMIN",
        "tags": [
          "airdrops"
        ],
        "operationId": "UsersChrichenActivatePut2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/users/chrichen/activate",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "upsert airdrop ADMIN",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webmethods/{uid}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get webmethod user by uid",
        "tags": [
          "webmethods"
        ],
        "operationId": "WebmethodsByUidGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webmethods": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get all webmethod users",
        "tags": [
          "webmethods"
        ],
        "operationId": "WebmethodsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-admin-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/webmethods",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "chrichen",
                "x-paypal-admin-id": "chrichen"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get all webmethod users",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/airdrops": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get all aidrops",
        "tags": [
          "airdrops"
        ],
        "operationId": "AirdropsGet2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/airdrops",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get all aidrops",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Crete user for woocoin user.",
        "summary": "create airdrop ADMIN",
        "tags": [
          "airdrops"
        ],
        "operationId": "AirdropsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-admin-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAirdropAdminrequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200"
            },
            "examples": {
              "application/json": {
                "_id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/airdrops",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}ebef1c89-6a2a-45a2-853c-5e2ddd836b4d",
                "x-paypal-admin-id": "chrichen"
              },
              "body": "{\"id\":\"testAirdrop721\",\"description\":\"test airdrop\",\"amount\":100,\"status\":\"active\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Access-Control-Allow-Headers": "Content-Type, Authorization, Account-Number",
                "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE",
                "Access-Control-Allow-Origin": "*",
                "Connection": "keep-alive",
                "Content-Length": "211",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Fri, 06 Jul 2018 17:42:10 GMT",
                "ETag": "W/\"d3-KF36NKndDnPhGoh6gRCpvicHkGA\""
              },
              "body": "{\"_id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create airdrop ADMIN",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/activities": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "list activities",
        "tags": [
          "activities"
        ],
        "operationId": "ActivitiesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/activities",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "list activities",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Crete user for woocoin user.",
        "summary": "create activity",
        "tags": [
          "activities"
        ],
        "operationId": "ActivitiesPost2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-admin-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateActivityrequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Create201"
            },
            "examples": {
              "application/json": {
                "id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen",
                "dateCreated": "1995-09-07T10:40:52Z",
                "dateUpdated": "1995-09-07T10:40:52Z"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/activities",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "chrichen",
                "x-paypal-admin-id": "chrichen"
              },
              "body": "{\"resourceId\":\"welcome\",\"resourceType\":\"Airdrop\",\"userId\":\"chrichen\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "{\"id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\",\"dateCreated\":\"1995-09-07T10:40:52Z\",\"dateUpdated\":\"1995-09-07T10:40:52Z\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create activity",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/activities/{activityId}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get activity",
        "tags": [
          "activities"
        ],
        "operationId": "ActivitiesByActivityIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "TODO: Add Description",
        "summary": "update activity",
        "tags": [
          "activities"
        ],
        "operationId": "ActivitiesByActivityIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/$model$": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get",
        "tags": [
          "$model$"
        ],
        "operationId": "ModelGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/$model$",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Crete user for woocoin user.",
        "summary": "put",
        "tags": [
          "$model$"
        ],
        "operationId": "ModelPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200"
            },
            "examples": {
              "application/json": {
                "_id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/$model$",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Access-Control-Allow-Headers": "Content-Type, Authorization, Account-Number",
                "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE",
                "Access-Control-Allow-Origin": "*",
                "Connection": "keep-alive",
                "Content-Length": "211",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Fri, 06 Jul 2018 17:42:10 GMT",
                "ETag": "W/\"d3-KF36NKndDnPhGoh6gRCpvicHkGA\""
              },
              "body": "{\"_id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "put",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Crete user for woocoin user.",
        "summary": "post test",
        "tags": [
          "$model$"
        ],
        "operationId": "ModelPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostTestrequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/200"
            },
            "examples": {
              "application/json": {
                "_id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/$model$",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}05c355bc-d01e-456c-b7c6-60c29261cbd9"
              },
              "body": "{\"firstName\":\"Christopher\",\"lastName\":\"Chen\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Access-Control-Allow-Headers": "Content-Type, Authorization, Account-Number",
                "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE",
                "Access-Control-Allow-Origin": "*",
                "Connection": "keep-alive",
                "Content-Length": "211",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Fri, 06 Jul 2018 17:42:10 GMT",
                "ETag": "W/\"d3-KF36NKndDnPhGoh6gRCpvicHkGA\""
              },
              "body": "{\"_id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "post test",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "TODO: Add Description",
        "summary": "delete",
        "tags": [
          "$model$"
        ],
        "operationId": "ModelDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/$model$",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "delete",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallets": {
      "post": {
        "description": "Crete user for woocoin user.",
        "summary": "create wallet record ADMIN",
        "tags": [
          "wallets"
        ],
        "operationId": "WalletsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateWalletRecordAdminrequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Create201"
            },
            "examples": {
              "application/json": {
                "id": "employeeId",
                "name": "Christopher Chen",
                "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
                "qid": "Q20044574",
                "workEmail": "chrichen@paypal.com",
                "userId": "chrichen",
                "dateCreated": "1995-09-07T10:40:52Z",
                "dateUpdated": "1995-09-07T10:40:52Z"
              }
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/wallets",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}68ece528-e8df-4206-a200-311d623990dd"
              },
              "body": "{\"firstName\":\"Christopher\",\"lastName\":\"Chen\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "{\"id\":\"employeeId\",\"name\":\"Christopher Chen\",\"imageUrl\":\"https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548\",\"qid\":\"Q20044574\",\"workEmail\":\"chrichen@paypal.com\",\"userId\":\"chrichen\",\"dateCreated\":\"1995-09-07T10:40:52Z\",\"dateUpdated\":\"1995-09-07T10:40:52Z\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create wallet record ADMIN",
            "x-testDescription": "Crete user for woocoin user."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rankings": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Rankings_GET",
        "tags": [
          "rankings"
        ],
        "operationId": "RankingsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rankings?limit=20&offset=0",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Rankings_GET1",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/newsfeeds": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get all newsfeed",
        "tags": [
          "flagged"
        ],
        "operationId": "NewsfeedsGet2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/newsfeeds?limit=20&offset=0",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get all newsfeed",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "create flagged",
        "tags": [
          "flagged"
        ],
        "operationId": "NewsfeedsPost2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateFlaggedrequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/newsfeeds",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
              },
              "body": "{\"from\":\"chrichen\",\"to\":[\"vnmaniyar\"],\"amount\":100,\"type\":\"p2p\",\"description\":\"thanks for helping me carry stuff to the car\",\"transactionHash\":\"3b11c3a9-9071-4609-948b-a69dcdd5f391\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create flagged",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/newsfeeds/{newsfeedId}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Untitled Request",
        "tags": [
          "flagged"
        ],
        "operationId": "NewsfeedsByNewsfeedIdGet2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "newsfeedId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/newsfeeds/%7B%7BnewsfeedId%7D%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Untitled Request",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/newsfeeds/4432423": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "update newsfeed",
        "tags": [
          "flagged"
        ],
        "operationId": "Newsfeeds4432423Put2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateNewsfeedrequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/newsfeeds/4432423",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
              },
              "body": "{\"description\":\"test newsfeed\",\"initiator\":\"corp-news-id\",\"recipient\":\"test-recipient\",\"users\":[\"test-user1\",\"test-user2\"],\"type\":\"idea\",\"amount\":1000,\"transactionHash\":\"test-blockchain-hash\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "update newsfeed",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/newsfeeds/{newsfeedId}/like": {
      "put": {
        "description": "Like or unlike a newsfeed event",
        "summary": "Untitled Request",
        "tags": [
          "flagged"
        ],
        "operationId": "NewsfeedsLikeByNewsfeedIdPut2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "newsfeedId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/newsfeeds/%7B%7BnewsfeedId%7D%7D/like",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Untitled Request1",
            "x-testDescription": "Like or unlike a newsfeed event"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transfers": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Transfers_GET",
        "tags": [
          "transfers"
        ],
        "operationId": "TransfersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/transfers?limit=20&offset=0",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Transfers_GET1",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "create transfer",
        "tags": [
          "transfers"
        ],
        "operationId": "TransfersPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateTransferrequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/transfers",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              },
              "body": "{\"from\":\"god\",\"to\":[\"chrichen\",\"taosun\"],\"type\":\"p2p\",\"amount\":\"100\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create transfer",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transfers/{transferId}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "TransfersByTransferId_GET",
        "tags": [
          "transfers"
        ],
        "operationId": "TransfersByTransferIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/transfers/%7B%7BtransferId%7D%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "{{x-paypal-user-id}}"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "TransfersByTransferId_GET1",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rewards": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get all rewards",
        "tags": [
          "rewards"
        ],
        "operationId": "RewardsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rewards?limit=20&offset=0&filter={\"status\":\"active\"}&orderBy={\"name\":1}",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "testPB"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get all rewards",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "create reward",
        "tags": [
          "rewards"
        ],
        "operationId": "RewardsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateRewardrequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/rewards",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "x-paypal-user-id": "testPB"
              },
              "body": "{\"name\":\"Test -- 63160c24-1f1d-45fa-8de4-b8894f25aed8\",\"description\":\"Test-00c5450e-eaa2-4250-8a74-80911b03a25c Experience\",\"price\":\"21\",\"quantity\":25,\"imageUrl\":\"/path/to/image\",\"locations\":[\"San Jose\",\"Banglore\"],\"categories\":[\"Food\",\"Xyz\"],\"logisticsInfo\":\"something something\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "create reward",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rewards/{rewardId}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get reward",
        "tags": [
          "rewards"
        ],
        "operationId": "RewardsByRewardIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "TODO: Add Description",
        "summary": "update reward",
        "tags": [
          "rewards"
        ],
        "operationId": "RewardsByRewardIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRewardrequest"
            }
          },
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/knguyen1": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "bridge api Copy",
        "tags": [
          "downstream"
        ],
        "operationId": "Knguyen1Get2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/knguyen1",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "bridge api Copy",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/redemptions": {
      "get": {
        "description": "redeem reward",
        "summary": "get all redemptions",
        "tags": [
          "redemptions"
        ],
        "operationId": "RedemptionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/redemptions?limit=20&offset=0&filter={\"status\":\"created\"}&orderBy={\"name\":1}",
              "headers": {
                "x-paypal-user-id": "testPB",
                "Accept": "application/json",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "get all redemptions",
            "x-testDescription": "redeem reward"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "redeem reward",
        "summary": "redeeem reward",
        "tags": [
          "redemptions"
        ],
        "operationId": "RedemptionsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RedeeemRewardrequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/redemptions",
              "headers": {
                "x-paypal-user-id": "testPB",
                "Accept": "application/json",
                "Content-Type": "application/json"
              },
              "body": "{\"rewardId\":\"{{rewardId}}\",\"quantity\":2}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "redeeem reward",
            "x-testDescription": "redeem reward"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/redemptions/{redemptionId}": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "get redemption",
        "tags": [
          "redemptions"
        ],
        "operationId": "RedemptionsByRedemptionIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "redemptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "TODO: Add Description",
        "summary": "update redemption",
        "tags": [
          "redemptions"
        ],
        "operationId": "RedemptionsByRedemptionIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "x-paypal-user-id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRedemptionrequest"
            }
          },
          {
            "name": "redemptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "CreateUserAdminrequest": {
      "title": "create user ADMINRequest",
      "example": {
        "firstName": "Christopher",
        "lastName": "Chen"
      },
      "type": "object",
      "properties": {
        "firstName": {
          "description": "",
          "example": "Christopher",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "example": "Chen",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    },
    "Create201": {
      "title": "create 201",
      "example": {
        "id": "employeeId",
        "name": "Christopher Chen",
        "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
        "qid": "Q20044574",
        "workEmail": "chrichen@paypal.com",
        "userId": "chrichen",
        "dateCreated": "1995-09-07T10:40:52Z",
        "dateUpdated": "1995-09-07T10:40:52Z"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "example": "employeeId",
          "type": "string"
        },
        "name": {
          "description": "",
          "example": "Christopher Chen",
          "type": "string"
        },
        "imageUrl": {
          "description": "",
          "example": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
          "type": "string"
        },
        "qid": {
          "description": "",
          "example": "Q20044574",
          "type": "string"
        },
        "workEmail": {
          "description": "",
          "example": "chrichen@paypal.com",
          "type": "string"
        },
        "userId": {
          "description": "",
          "example": "chrichen",
          "type": "string"
        },
        "dateCreated": {
          "description": "",
          "example": "9/7/1995 10:40:52 AM",
          "type": "string"
        },
        "dateUpdated": {
          "description": "",
          "example": "9/7/1995 10:40:52 AM",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "imageUrl",
        "qid",
        "workEmail",
        "userId",
        "dateCreated",
        "dateUpdated"
      ]
    },
    "200": {
      "title": "200",
      "example": {
        "_id": "employeeId",
        "name": "Christopher Chen",
        "imageUrl": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
        "qid": "Q20044574",
        "workEmail": "chrichen@paypal.com",
        "userId": "chrichen"
      },
      "type": "object",
      "properties": {
        "_id": {
          "description": "",
          "example": "employeeId",
          "type": "string"
        },
        "name": {
          "description": "",
          "example": "Christopher Chen",
          "type": "string"
        },
        "imageUrl": {
          "description": "",
          "example": "https://bridgeimages.paypalcorp.com/images/120120/Q20044574.jpg?q=1529695854548",
          "type": "string"
        },
        "qid": {
          "description": "",
          "example": "Q20044574",
          "type": "string"
        },
        "workEmail": {
          "description": "",
          "example": "chrichen@paypal.com",
          "type": "string"
        },
        "userId": {
          "description": "",
          "example": "chrichen",
          "type": "string"
        }
      },
      "required": [
        "_id",
        "name",
        "imageUrl",
        "qid",
        "workEmail",
        "userId"
      ]
    },
    "CreateAirdropAdminrequest": {
      "title": "create airdrop ADMINRequest",
      "example": {
        "id": "testAirdrop721",
        "description": "test airdrop",
        "amount": 100,
        "status": "active"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "example": "testAirdrop721",
          "type": "string"
        },
        "description": {
          "description": "",
          "example": "test airdrop",
          "type": "string"
        },
        "amount": {
          "description": "",
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "",
          "example": "active",
          "type": "string"
        }
      },
      "required": [
        "id",
        "description",
        "amount",
        "status"
      ]
    },
    "CreateAirdropAdminrequest6": {
      "title": "create airdrop ADMINRequest6",
      "example": {
        "name": "test - bafc25a2-a3ce-4cad-8fce-27e298f2c81b",
        "description": "test airdrop",
        "amount": 100,
        "status": "complete"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "test - bafc25a2-a3ce-4cad-8fce-27e298f2c81b",
          "type": "string"
        },
        "description": {
          "description": "",
          "example": "test airdrop",
          "type": "string"
        },
        "amount": {
          "description": "",
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "",
          "example": "complete",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "amount",
        "status"
      ]
    },
    "CreateActivityrequest": {
      "title": "create activityRequest",
      "example": {
        "resourceId": "welcome",
        "resourceType": "Airdrop",
        "userId": "chrichen"
      },
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "",
          "example": "welcome",
          "type": "string"
        },
        "resourceType": {
          "description": "",
          "example": "Airdrop",
          "type": "string"
        },
        "userId": {
          "description": "",
          "example": "chrichen",
          "type": "string"
        }
      },
      "required": [
        "resourceId",
        "resourceType",
        "userId"
      ]
    },
    "PostTestrequest": {
      "title": "post testRequest",
      "example": {
        "firstName": "Christopher",
        "lastName": "Chen"
      },
      "type": "object",
      "properties": {
        "firstName": {
          "description": "",
          "example": "Christopher",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "example": "Chen",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    },
    "CreateWalletRecordAdminrequest": {
      "title": "create wallet record ADMINRequest",
      "example": {
        "firstName": "Christopher",
        "lastName": "Chen"
      },
      "type": "object",
      "properties": {
        "firstName": {
          "description": "",
          "example": "Christopher",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "example": "Chen",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    },
    "CreateNewsfeedrequest": {
      "title": "create newsfeedRequest",
      "example": {
        "from": "chrichen",
        "to": [
          "vnmaniyar"
        ],
        "amount": 100,
        "type": "p2p",
        "description": "thanks for helping me carry stuff to the car",
        "transactionHash": "cfb5a5ec-ae71-4e51-a628-af1f4095b3aa"
      },
      "type": "object",
      "properties": {
        "from": {
          "description": "",
          "example": "chrichen",
          "type": "string"
        },
        "to": {
          "description": "",
          "example": [
            "vnmaniyar"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amount": {
          "description": "",
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "",
          "example": "p2p",
          "type": "string"
        },
        "description": {
          "description": "",
          "example": "thanks for helping me carry stuff to the car",
          "type": "string"
        },
        "transactionHash": {
          "description": "",
          "example": "cfb5a5ec-ae71-4e51-a628-af1f4095b3aa",
          "type": "string"
        }
      },
      "required": [
        "from",
        "to",
        "amount",
        "type",
        "description",
        "transactionHash"
      ]
    },
    "UpdateNewsfeedrequest": {
      "title": "update newsfeedRequest",
      "example": {
        "description": "test newsfeed",
        "initiator": "corp-news-id",
        "recipient": "test-recipient",
        "users": [
          "test-user1",
          "test-user2"
        ],
        "type": "idea",
        "amount": 1000,
        "transactionHash": "test-blockchain-hash"
      },
      "type": "object",
      "properties": {
        "description": {
          "description": "",
          "example": "test newsfeed",
          "type": "string"
        },
        "initiator": {
          "description": "",
          "example": "corp-news-id",
          "type": "string"
        },
        "recipient": {
          "description": "",
          "example": "test-recipient",
          "type": "string"
        },
        "users": {
          "description": "",
          "example": [
            "test-user1",
            "test-user2"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "",
          "example": "idea",
          "type": "string"
        },
        "amount": {
          "description": "",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "transactionHash": {
          "description": "",
          "example": "test-blockchain-hash",
          "type": "string"
        }
      },
      "required": [
        "description",
        "initiator",
        "recipient",
        "users",
        "type",
        "amount",
        "transactionHash"
      ]
    },
    "CreateFlaggedrequest": {
      "title": "create flaggedRequest",
      "example": {
        "from": "chrichen",
        "to": [
          "vnmaniyar"
        ],
        "amount": 100,
        "type": "p2p",
        "description": "thanks for helping me carry stuff to the car",
        "transactionHash": "3b11c3a9-9071-4609-948b-a69dcdd5f391"
      },
      "type": "object",
      "properties": {
        "from": {
          "description": "",
          "example": "chrichen",
          "type": "string"
        },
        "to": {
          "description": "",
          "example": [
            "vnmaniyar"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amount": {
          "description": "",
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "",
          "example": "p2p",
          "type": "string"
        },
        "description": {
          "description": "",
          "example": "thanks for helping me carry stuff to the car",
          "type": "string"
        },
        "transactionHash": {
          "description": "",
          "example": "3b11c3a9-9071-4609-948b-a69dcdd5f391",
          "type": "string"
        }
      },
      "required": [
        "from",
        "to",
        "amount",
        "type",
        "description",
        "transactionHash"
      ]
    },
    "CreateTransferrequest": {
      "title": "create transferRequest",
      "example": {
        "from": "god",
        "to": [
          "chrichen",
          "taosun"
        ],
        "type": "p2p",
        "amount": "100"
      },
      "type": "object",
      "properties": {
        "from": {
          "description": "",
          "example": "god",
          "type": "string"
        },
        "to": {
          "description": "",
          "example": [
            "chrichen",
            "taosun"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "",
          "example": "p2p",
          "type": "string"
        },
        "amount": {
          "description": "",
          "example": "100",
          "type": "string"
        }
      },
      "required": [
        "from",
        "to",
        "type",
        "amount"
      ]
    },
    "CreateRewardrequest": {
      "title": "create rewardRequest",
      "example": {
        "name": "Test -- 63160c24-1f1d-45fa-8de4-b8894f25aed8",
        "description": "Test-00c5450e-eaa2-4250-8a74-80911b03a25c Experience",
        "price": "21",
        "quantity": 25,
        "imageUrl": "/path/to/image",
        "locations": [
          "San Jose",
          "Banglore"
        ],
        "categories": [
          "Food",
          "Xyz"
        ],
        "logisticsInfo": "something something"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Test -- 63160c24-1f1d-45fa-8de4-b8894f25aed8",
          "type": "string"
        },
        "description": {
          "description": "",
          "example": "Test-00c5450e-eaa2-4250-8a74-80911b03a25c Experience",
          "type": "string"
        },
        "price": {
          "description": "",
          "example": "21",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "example": 25,
          "type": "integer",
          "format": "int32"
        },
        "imageUrl": {
          "description": "",
          "example": "/path/to/image",
          "type": "string"
        },
        "locations": {
          "description": "",
          "example": [
            "San Jose",
            "Banglore"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "description": "",
          "example": [
            "Food",
            "Xyz"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logisticsInfo": {
          "description": "",
          "example": "something something",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "imageUrl",
        "locations",
        "categories",
        "logisticsInfo"
      ]
    },
    "UpdateRewardrequest": {
      "title": "update rewardRequest",
      "example": {
        "name": "Updated {{experienceName}}",
        "description": "Test description",
        "price": "22",
        "quantity": 15,
        "status": "active"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Updated {{experienceName}}",
          "type": "string"
        },
        "description": {
          "description": "",
          "example": "Test description",
          "type": "string"
        },
        "price": {
          "description": "",
          "example": "22",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "example": 15,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "",
          "example": "active",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "status"
      ]
    },
    "RedeeemRewardrequest": {
      "title": "redeeem rewardRequest",
      "example": {
        "rewardId": "{{rewardId}}",
        "quantity": 2
      },
      "type": "object",
      "properties": {
        "rewardId": {
          "description": "",
          "example": "{{rewardId}}",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "rewardId",
        "quantity"
      ]
    },
    "UpdateRedemptionrequest": {
      "title": "update redemptionRequest",
      "example": {
        "status": "spent"
      },
      "type": "object",
      "properties": {
        "status": {
          "description": "",
          "example": "spent",
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    }
  }
}